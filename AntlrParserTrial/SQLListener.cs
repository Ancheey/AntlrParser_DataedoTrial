//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from SQL.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="SQLParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface ISQLListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] SQLParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] SQLParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.basicSelectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicSelectStatement([NotNull] SQLParser.BasicSelectStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.basicSelectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicSelectStatement([NotNull] SQLParser.BasicSelectStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.joinedSelectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinedSelectStatement([NotNull] SQLParser.JoinedSelectStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.joinedSelectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinedSelectStatement([NotNull] SQLParser.JoinedSelectStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.basicSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicSelector([NotNull] SQLParser.BasicSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.basicSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicSelector([NotNull] SQLParser.BasicSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.joinedSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinedSelector([NotNull] SQLParser.JoinedSelectorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.joinedSelector"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinedSelector([NotNull] SQLParser.JoinedSelectorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.basicTargetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicTargetter([NotNull] SQLParser.BasicTargetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.basicTargetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicTargetter([NotNull] SQLParser.BasicTargetterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.joinedTargetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinedTargetter([NotNull] SQLParser.JoinedTargetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.joinedTargetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinedTargetter([NotNull] SQLParser.JoinedTargetterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.joinedMatcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinedMatcher([NotNull] SQLParser.JoinedMatcherContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.joinedMatcher"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinedMatcher([NotNull] SQLParser.JoinedMatcherContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.whereLookup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereLookup([NotNull] SQLParser.WhereLookupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.whereLookup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereLookup([NotNull] SQLParser.WhereLookupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.asStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsStatement([NotNull] SQLParser.AsStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.asStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsStatement([NotNull] SQLParser.AsStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.variableAssignmentIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableAssignmentIdentifier([NotNull] SQLParser.VariableAssignmentIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.variableAssignmentIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableAssignmentIdentifier([NotNull] SQLParser.VariableAssignmentIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.specificIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecificIdentifier([NotNull] SQLParser.SpecificIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.specificIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecificIdentifier([NotNull] SQLParser.SpecificIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] SQLParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] SQLParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.boolFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolFunction([NotNull] SQLParser.BoolFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.boolFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolFunction([NotNull] SQLParser.BoolFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="SQLParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] SQLParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="SQLParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] SQLParser.VariableContext context);
}
